** TCP
*** 在建立连接的时候，为什么ISN不能设置为0？
TCP设计，需要考虑，把一个个离散的数据包串联起来，形成连续的逻辑，这正是TCP的价值所在。然而，客户端和服务器建立连接的时候，未必每次都能成功，即使成功了，也未必能正常结束。
假设客户端首先建立连接，然后发送SEQ=100的数据包，但由于某种原因，这个包延迟到达了，导致服务器认为通讯中断了，关闭了连接。然后，同一个客户端再次发起请求，刚刚建立连接。
之前那个没有到达的SEQ=100的包恰好来了。如果新建立的连接，源IP，源端口，目的IP，目的端口，数据包四元组和原数据包一样。导致新的连接中接受了这个旧的延迟到达的数据包。
如果用随机数作为ISN，可以使得每个连接的身份独一无二，就可以规避这个问题。

*** TCP断开连接为什么不能像建立连接一样，三次就完成？
首先，TCP是可靠通讯的协议，任何一方要向另一方发数据SYN，都必须收到确认的回应ACK。而TCP是双向的通讯协议，双方都可以主动发送消息。
HTTP是一问一答，这是HTTP的特性，不是TCP的特性。TCP中，客户端和服务器都可以随时主动向对方发送数据（改用HTTP2之后服务器也可以主动推送信息到客户端，而不用修改地产的TCP协议，这个TCp本来就支持双向通信）。
既然是双向的，那么建立连接必须确认双发都是可靠的。即：
第一轮：
1. 客户发送SYN（synchronize）（此时为1，表示新连接），SEQ NO(Sequence Number，有一个专门的名词，Initial Sequence Number ISN，用于称呼这个特殊SEQ NO)
2. 服务器回应ACK(acknowledge)，SEQ NO，ACK NO(Acknolege Number)
第二轮：
3. 服务器发送SYN，SEQ NO，ACK NO
4. 客户端回应ACK，SEQ NO， ACK NO

由于发送请求独立，这两轮请求之间必须是关联的，服务器收到第一个SYN时，需要确认SEQ NO是旧有的，还是新的，此时必须向客户端确认，客户端核实其中的ACK，客户端返回信息，其中包含SYN的ACK，同时设定 SEQ NO=ISN+1。
而网络通信成本很高，通信越少越好。从上面的过程来看，第二步和第三步是可以合并的。

那为什么断开连接的需要四次呢？

TCP是双向通信协议，要接受连接，必须双方发送终止信号，并等待对方确认，所以需要四次。
如果像建立连接的时候一样，合并服务器返回的SYN和ACK，会遇到一个问题。当客户端发送FIN是，服务器响应ACK。假设服务器之前发送给客户端的操作还没有完成，客户端还没有接受完，如果此时受到服务器的ACK表示没有数据了，终止连接。这个情况有问题。
所以终止连接必须要四步。

